<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.css"
    />
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/css/bootstrap-utils/opacity.css" />
    <link rel="stylesheet" href="/css/index.css" />
    <link rel="stylesheet" href="/css/anime.css" />
    <title>FPTPlay-Clone</title>
  </head>
  <body>
    <%- include('../partials/header'); %>

    <div class="container opacity-0">
      <div class="row anime-recent">
        <div class="col-12 title text-white fs-4 mt-3 mb-2">Xem gần đây</div>
      </div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
      crossorigin="anonymous"
    ></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/bxslider/4.2.12/jquery.bxslider.min.js"></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"
      integrity="sha512-bZS47S7sPOxkjU/4Bt0zrhEtWx0y0CRkhEp8IckzK+ltifIIE9EMIMTuT/mEzoIMewUINruDBIR/jJnbguonqQ=="
      crossorigin="anonymous"
    ></script>
    <script src="/js/fptplay.js"></script>
    <script src="/js/models/Anime.js"></script>
    <script src="/js/utils/index.js"></script>
    <script>
      function showResult(anime) {
        return `
          <div class="col-xxl-2 col-lg-2 col-sm-6 col-md-4 col-6 my-2">
            <div class="card anime-item">
              <a href="/anime/watch/${anime._id}">
                <img
                  src=${anime.standing_image || anime.standing_thumb}
                  class="card-img-top"
                />
                <div class="card-body text-white">
                  <p class="card-text">${textAbstract(anime.title_vie, 35)}</p>
                </div>
              </a>
            </div>
          </div>
        `;
      }

      (async () => {
        const $container = $(".container");

        const structures = {
          list: {
            structure_id: "560e368317dc1310a164d2c7",
            structure_name: "Anime",
          },
          special: {
            structure_id: "5e732aa12089bd0041850ac3",
            structure_name: "Top anime đặc sắc",
          },
        };

        for (const [key, value] of Object.entries(structures)) {
          const list = await getList({ structure_id: value.structure_id });

          $container.append(`
            <div class="row anime-${key}">
              <div class="col-12 title text-white fs-4 mt-3 mb-2">${
                value.structure_name
              }</div>
              ${list.map((anime) => showResult(anime)).join("\n")}
            </div>
          `);
        }

        async function getList({ structure_id, per_page = 12, page = 1 }) {
          const endpoint = "highlight";
          const query = {
            structure_id,
            per_page,
            page,
          };

          const URL = FPTPlay.getUrl(endpoint, query);

          const { data } = await axios.get(URL);

          return data.result_list;
        }
      })();
    </script>
    <script>
      (async () => {
        $container = $(".anime-recent");

        const recentAnime = Object.keys(localStorage)
          .map(function (key) {
            const savedAnimeInfo = JSON.parse(localStorage.getItem(key));
            const anime = {
              id: key,
              date: savedAnimeInfo.date || 0,
            };
            return anime;
          })
          .sort((a, b) => b.date - a.date);

        const animePromise = recentAnime.map((anime) =>
          Anime.getInfo(anime.id)
        );

        const anime = await Promise.all(animePromise);

        anime.forEach((anime) => {
          $container.append(showResult(anime));
        });

        $(".container").fadeTo(1000, 1);
      })();
    </script>
    <script></script>
  </body>
</html>
